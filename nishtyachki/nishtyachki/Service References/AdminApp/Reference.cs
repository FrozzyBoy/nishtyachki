//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nishtyachki.AdminApp {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminApp.IWcfService", CallbackContract=typeof(nishtyachki.AdminApp.IWcfServiceCallback))]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/InitUser", ReplyAction="http://tempuri.org/IWcfService/InitUserResponse")]
        void InitUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/InitUser", ReplyAction="http://tempuri.org/IWcfService/InitUserResponse")]
        System.Threading.Tasks.Task InitUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/TryStandInQueue", ReplyAction="http://tempuri.org/IWcfService/TryStandInQueueResponse")]
        bool TryStandInQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/TryStandInQueue", ReplyAction="http://tempuri.org/IWcfService/TryStandInQueueResponse")]
        System.Threading.Tasks.Task<bool> TryStandInQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/LeaveQueue", ReplyAction="http://tempuri.org/IWcfService/LeaveQueueResponse")]
        void LeaveQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/LeaveQueue", ReplyAction="http://tempuri.org/IWcfService/LeaveQueueResponse")]
        System.Threading.Tasks.Task LeaveQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/AnswerForOfferToUse", ReplyAction="http://tempuri.org/IWcfService/AnswerForOfferToUseResponse")]
        void AnswerForOfferToUse(bool willUse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/AnswerForOfferToUse", ReplyAction="http://tempuri.org/IWcfService/AnswerForOfferToUseResponse")]
        System.Threading.Tasks.Task AnswerForOfferToUseAsync(bool willUse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/StopUseObj", ReplyAction="http://tempuri.org/IWcfService/StopUseObjResponse")]
        void StopUseObj();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/StopUseObj", ReplyAction="http://tempuri.org/IWcfService/StopUseObjResponse")]
        System.Threading.Tasks.Task StopUseObjAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/NotifyServerReady")]
        void NotifyServerReady();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/ShowMessage")]
        void ShowMessage(string text);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/StandInQueue")]
        void StandInQueue();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/ShowPosition")]
        void ShowPosition(int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/OfferToUseObj", ReplyAction="http://tempuri.org/IWcfService/OfferToUseObjResponse")]
        void OfferToUseObj();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/NotifyToUseObj", ReplyAction="http://tempuri.org/IWcfService/NotifyToUseObjResponse")]
        void NotifyToUseObj();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : nishtyachki.AdminApp.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.DuplexClientBase<nishtyachki.AdminApp.IWcfService>, nishtyachki.AdminApp.IWcfService {
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InitUser() {
            base.Channel.InitUser();
        }
        
        public System.Threading.Tasks.Task InitUserAsync() {
            return base.Channel.InitUserAsync();
        }
        
        public bool TryStandInQueue() {
            return base.Channel.TryStandInQueue();
        }
        
        public System.Threading.Tasks.Task<bool> TryStandInQueueAsync() {
            return base.Channel.TryStandInQueueAsync();
        }
        
        public void LeaveQueue() {
            base.Channel.LeaveQueue();
        }
        
        public System.Threading.Tasks.Task LeaveQueueAsync() {
            return base.Channel.LeaveQueueAsync();
        }
        
        public void AnswerForOfferToUse(bool willUse) {
            base.Channel.AnswerForOfferToUse(willUse);
        }
        
        public System.Threading.Tasks.Task AnswerForOfferToUseAsync(bool willUse) {
            return base.Channel.AnswerForOfferToUseAsync(willUse);
        }
        
        public void StopUseObj() {
            base.Channel.StopUseObj();
        }
        
        public System.Threading.Tasks.Task StopUseObjAsync() {
            return base.Channel.StopUseObjAsync();
        }
    }
}
